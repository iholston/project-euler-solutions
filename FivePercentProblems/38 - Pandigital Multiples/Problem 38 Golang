// There is definately a much faster way to do this. Don't need to actually make a string
// can just keep track of lengths of each int and when you hit one of the numbers dsubX just 
// product = product * num that number. Would be super fast. But this is what i wrote off
// the top of my head and it worked so i dont feel like rewriting cuz its too simple

package main
import("fmt"
        "math"
        "strconv"
)
func main() {
  str := ""
  product := 1
  for i := 1; i < 190000 /*gets string to 1mil places*/; i++ {
    str += strconv.Itoa(i)
  }
  for i := 0; i < 7; i++ {
    exp := math.Pow(float64(10), float64(i))
    num, _ := strconv.Atoi(string(str[int(exp) - 1]))
    product = product * num
  }
  fmt.Println(product)
}
