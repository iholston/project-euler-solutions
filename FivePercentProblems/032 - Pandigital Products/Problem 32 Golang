// Fun and easy

package main

import (
	"fmt"
	"strconv"
	"strings"
)

func pandigital(a int, b int, c int) bool {
	numbers := [9]string{"1", "2", "3", "4", "5", "6", "7", "8", "9"}
	bigstring := strconv.Itoa(a) + strconv.Itoa(b) + strconv.Itoa(c)
	for _, numb := range numbers {
		if strings.Count(bigstring, numb) != 1 {
			return false
		}
	}
	return true
}

func main() {
	products := []int{}
	for i := 0; i < 10000; i++ { // This way because 4 is the largest it can be to multiply and get 9 total digits
		for j := 0; j < 10000; j++ {
			product := 1 * j
			length := len(strconv.Itoa(i)) + len(strconv.Itoa(j)) + len(strconv.Itoa(product))
			if length != 9 {
				continue
			}
			if !pandigital(i, j, product) {
				continue
			}
			alreadyinproducts := false
			for _, val := range products {
				if product == val {
					alreadyinproducts = true
				}
			}
			if !alreadyinproducts {
				products = append(products, product)
			}
		}
	}
	final := 0
	for _, val := range products {
		final += val
	}
	fmt.Println(final)
}
