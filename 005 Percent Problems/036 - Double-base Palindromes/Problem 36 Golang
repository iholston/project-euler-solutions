// supereasy

package main

import ("fmt"
        "math"
        "strconv"
        "strings"
)

func palindrome(x string) bool {
    if len(x) % 2 == 0 {
        firstpart := x[:len(x)/2]
        secondpart := x[len(x)/2:]
        secondpartR := ""
        for _, num := range secondpart {
            secondpartR = string(num) + secondpartR
        }
        if strings.Compare(firstpart, secondpartR) == 0{
            return true
        }
    } else {
        firstpart := x[:int(math.Floor(float64(len(x)/2)))]
        secondpart := x[int(math.Floor(float64(len(x)/2))) + 1:]
        secondpartR := ""
        for _, num := range secondpart {
            secondpartR = string(num) + secondpartR
        }
        if strings.Compare(firstpart, secondpartR) == 0 {
            return true
        }
    }
    return false
}

func main() {
    palintotal := 0
    for i := 0; i < 1000000; i++ {
        if palindrome(strconv.Itoa(i)) && palindrome(strconv.FormatInt(int64(i), 2)) {
            palintotal += i
        }
    }
    fmt.Println(palintotal)
}

