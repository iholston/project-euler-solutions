# not very fast 13.8s
# but it's the first recursive function i've written in a long time so it was fun
package main
import "fmt"
import "strconv"
import "time"

func check(x int) int {
  if x == 1 {return 1}
  if x == 89 {return 89}
  num := strconv.Itoa(x)
  finalnum := 0
  for i := 0; i < len(num); i++ { # takes each part of num and squares it and adds to finalnum
    number, _ := strconv.Atoi(string(num[i]))
    number = number * number
    finalnum += number
  }
  if check(finalnum) == 89 {return 89}
  return 1
}

func main() {
  start := time.Now()
  c89 := 0
  for i := 1; i < 10000000; i++ {
    if check(i) == 89 {c89++}
  }
  fmt.Println(c89, time.Since(start))
}
